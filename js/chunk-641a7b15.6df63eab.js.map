{"version":3,"sources":["webpack:///./src/views/Screenshot.vue?9513","webpack:///./src/views/Screenshot.vue?b69e","webpack:///src/views/Screenshot.vue","webpack:///./src/views/Screenshot.vue?bfd2","webpack:///./src/views/Screenshot.vue","webpack:///./src/mixins/saving.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","btnColorCreateScreens","btnIconCreateScreens","isProcess","on","createScreenshots","scopedSlots","_u","key","fn","proxy","_v","model","value","callback","$$v","doThumb","expression","doScreens","checkFiles","_l","file","name","class","isReady","_s","$set","staticRenderFns","mixins","data","arrFiles","computed","redirectAfterFiles","get","$store","state","set","commit","watch","forEach","val","addCreateType","type","removeCreateType","methods","item","createType","includes","push","index","splice","mounted","created","getFiles","component","saveBtn","saveAction","btnIcon","btnColor","event","originBtnIcon","originBtnColor","setTimeout"],"mappings":"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","file":"js/chunk-641a7b15.6df63eab.js","sourcesContent":["import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Screenshot.vue?vue&type=style&index=0&id=2f543cb2&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Screenshot.vue?vue&type=style&index=0&id=2f543cb2&lang=scss&scoped=true&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"screenshot\"},[(_vm.folderName)?_c('div',[_c('div',{staticClass:\"header\"},[_c('q-btn',{attrs:{\"color\":_vm.btnColorCreateScreens,\"label\":\"Создать\",\"icon-right\":_vm.btnIconCreateScreens,\"loading\":_vm.isProcess,\"disable\":_vm.isProcess},on:{\"click\":_vm.createScreenshots},scopedSlots:_vm._u([{key:\"loading\",fn:function(){return [_c('q-spinner-tail',{attrs:{\"size\":\"sm\"}})]},proxy:true}],null,false,1364290725)})],1),_c('q-card',{staticClass:\"settings\"},[_c('q-card-section',[_c('p',[_vm._v(\"Создать скриншоты для:\")]),_c('q-checkbox',{staticClass:\"screenshot-type\",attrs:{\"label\":\"Thumb\"},model:{value:(_vm.doThumb),callback:function ($$v) {_vm.doThumb=$$v},expression:\"doThumb\"}}),_c('q-checkbox',{staticClass:\"screenshot-type\",attrs:{\"label\":\"Screens\"},model:{value:(_vm.doScreens),callback:function ($$v) {_vm.doScreens=$$v},expression:\"doScreens\"}})],1)],1),_c('div',{staticClass:\"files\"},[_c('div',{staticClass:\"checked\"},[_c('q-checkbox',{model:{value:(_vm.checkFiles),callback:function ($$v) {_vm.checkFiles=$$v},expression:\"checkFiles\"}})],1),_vm._l((_vm.arrFiles),function(file){return _c('q-card',{key:file.name,staticClass:\"files-card\"},[_c('q-card-section',{staticClass:\"section\"},[_c('p',{staticClass:\"name\",class:{'no-checked': !file.isReady}},[_vm._v(_vm._s(file.name))]),_c('q-checkbox',{model:{value:(file.isReady),callback:function ($$v) {_vm.$set(file, \"isReady\", $$v)},expression:\"file.isReady\"}})],1)],1)}),_c('div',{staticClass:\"checked\"},[_c('q-checkbox',{model:{value:(_vm.checkFiles),callback:function ($$v) {_vm.checkFiles=$$v},expression:\"checkFiles\"}})],1)],2)],1):_c('div',[_c('h6',{staticClass:\"no-file\"},[_vm._v(\"Файл не выбран\")])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"screenshot\">\r\n    <div v-if=\"folderName\">\r\n      <div class=\"header\">\r\n        <q-btn\r\n          :color=\"btnColorCreateScreens\"\r\n          @click=\"createScreenshots\"\r\n          label=\"Создать\"\r\n          :icon-right=\"btnIconCreateScreens\"\r\n          :loading=\"isProcess\"\r\n          :disable=\"isProcess\"\r\n        >\r\n          <template v-slot:loading>\r\n            <q-spinner-tail size=\"sm\" />\r\n          </template>\r\n        </q-btn>\r\n      </div>\r\n      <q-card class=\"settings\">\r\n        <q-card-section>\r\n          <p>Создать скриншоты для:</p>\r\n          <q-checkbox class=\"screenshot-type\" v-model=\"doThumb\" label=\"Thumb\" />\r\n          <q-checkbox class=\"screenshot-type\" v-model=\"doScreens\" label=\"Screens\" />\r\n        </q-card-section>\r\n      </q-card>\r\n      <div class=\"files\">\r\n        <div class=\"checked\">\r\n          <q-checkbox v-model=\"checkFiles\" />\r\n        </div>\r\n        <q-card class=\"files-card\" v-for=\"file of arrFiles\" :key=\"file.name\">\r\n          <q-card-section class=\"section\">\r\n            <p class=\"name\" :class=\"{'no-checked': !file.isReady}\">{{ file.name }}</p>\r\n            <q-checkbox v-model=\"file.isReady\" />\r\n          </q-card-section>\r\n        </q-card>\r\n        <div class=\"checked\">\r\n          <q-checkbox v-model=\"checkFiles\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div v-else>\r\n      <h6 class=\"no-file\">Файл не выбран</h6>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n <script>\r\nimport { mapState } from 'vuex';\r\nimport { saveBtn } from '@/mixins/saving';\r\n\r\nexport default {\r\n  name: 'Screenshot',\r\n  mixins: [saveBtn],\r\n  data: function () {\r\n    return {\r\n      btnColorCreateScreens: 'primary',\r\n      btnIconCreateScreens: 'create',\r\n      arrFiles: [],\r\n      checkFiles: true,\r\n      doThumb: true,\r\n      doScreens: false,\r\n      isProcess: false,\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapState({\r\n      baseURL: (state) => state.baseURL,\r\n      folderName: (state) => state.folderName,\r\n    }),\r\n    redirectAfterFiles: {\r\n      get() {\r\n        return this.$store.state.redirectAfterFiles;\r\n      },\r\n      set(value) {\r\n        this.$store.commit('setRedirectAfterFiles', value);\r\n      },\r\n    },\r\n  },\r\n  watch: {\r\n    checkFiles(val) {\r\n      this.arrFiles.forEach((item) => (item.isReady = val));\r\n    },\r\n    doThumb(val) {\r\n      const type = 'thumb';\r\n      if (val) {\r\n        this.addCreateType(type);\r\n      } else {\r\n        this.removeCreateType(type);\r\n      }\r\n    },\r\n    doScreens(val) {\r\n      const type = 'screens';\r\n      if (val) {\r\n        this.addCreateType(type);\r\n      } else {\r\n        this.removeCreateType(type);\r\n      }\r\n    },\r\n  },\r\n  methods: {\r\n    async createScreenshots() {\r\n      this.isProcess = true;\r\n      let arrCreateFiles = this.arrFiles.filter((item) => item.isReady);\r\n\r\n      if (!arrCreateFiles.length) {\r\n        this.saveAction('btnIconCreateScreens', 'btnColorCreateScreens', false); //mixin\r\n        console.error('Файлы не выбранны');\r\n      }\r\n\r\n      if (!(this.doThumb || this.doScreens)) {\r\n        this.saveAction('btnIconCreateScreens', 'btnColorCreateScreens', false); //mixin\r\n        console.error('Не выбран тип');\r\n      }\r\n\r\n      let response, result;\r\n      try {\r\n        response = await fetch(this.baseURL + 'create_screenshots', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json;charset=utf-8',\r\n          },\r\n          body: JSON.stringify(arrCreateFiles),\r\n        });\r\n        result = await response.json();\r\n\r\n        if (result.error !== '') {\r\n          this.saveAction(\r\n            'btnIconCreateScreens',\r\n            'btnColorCreateScreens',\r\n            false\r\n          ); //mixin\r\n          console.error(result.error);\r\n        } else {\r\n          this.saveAction('btnIconCreateScreens', 'btnColorCreateScreens'); //mixin\r\n        }\r\n      } catch (error) {\r\n        this.saveAction('btnIconCreateScreens', 'btnColorCreateScreens', false); //mixin\r\n        console.error(error);\r\n      }\r\n\r\n      this.isProcess = false;\r\n    },\r\n    addCreateType(type) {\r\n      this.arrFiles.forEach((item) => {\r\n        if (!item.createType.includes(type)) {\r\n          item.createType.push(type);\r\n        }\r\n      });\r\n    },\r\n    removeCreateType(type) {\r\n      this.arrFiles.forEach((item) => {\r\n        const index = item.createType.indexOf(type);\r\n        if (index !== -1) {\r\n          item.createType.splice(index, 1);\r\n        }\r\n      });\r\n    },\r\n    async getFiles() {\r\n      let response, result;\r\n      try {\r\n        response = await fetch(this.baseURL + 'screenshots', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json;charset=utf-8',\r\n          },\r\n          body: JSON.stringify({ folderName: this.folderName }),\r\n        });\r\n        result = await response.json();\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n\r\n      this.arrFiles = result;\r\n    },\r\n  },\r\n  mounted() {\r\n    this.redirectAfterFiles = '/screenshots';\r\n  },\r\n  created() {\r\n    this.getFiles();\r\n  },\r\n};\r\n</script>\r\n\r\n <style  lang=\"scss\" scoped>\r\n.files-card {\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.files-card .section {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n}\r\n\r\n.files-card p {\r\n  margin-bottom: 0;\r\n}\r\n\r\n.checked {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  padding-right: 1rem;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.settings {\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.screenshot-type {\r\n  margin-right: 1rem;\r\n}\r\n\r\n.header {\r\n  position: sticky;\r\n  top: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n  margin-bottom: 1rem;\r\n  padding: 1rem 0;\r\n  background: #fff;\r\n  z-index: 2;\r\n}\r\n\r\n.no-checked {\r\n  color: rgb(199, 199, 199);\r\n}\r\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Screenshot.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Screenshot.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Screenshot.vue?vue&type=template&id=2f543cb2&scoped=true&\"\nimport script from \"./Screenshot.vue?vue&type=script&lang=js&\"\nexport * from \"./Screenshot.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Screenshot.vue?vue&type=style&index=0&id=2f543cb2&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"2f543cb2\",\n  null\n  \n)\n\nexport default component.exports","export const saveBtn = {\r\n  data: function() {\r\n    return {};\r\n  },\r\n  methods: {\r\n    saveAction(btnIcon, btnColor, event = true) {\r\n      const originBtnIcon = this[btnIcon];\r\n      const originBtnColor = this[btnColor];\r\n\r\n      if (event) {\r\n        this[btnIcon] = 'done';\r\n        this[btnColor] = 'positive';\r\n      } else {\r\n        this[btnIcon] = 'report_problem';\r\n        this[btnColor] = 'red';\r\n      }\r\n      setTimeout(() => {\r\n        this[btnIcon] = originBtnIcon;\r\n        this[btnColor] = originBtnColor;\r\n      }, 2000);\r\n    }\r\n  }\r\n};\r\n"],"sourceRoot":""}